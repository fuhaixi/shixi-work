package com.example.accessingdatamysql;



import java.util.Calendar;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private StudentRepository studentRepository;

	@Autowired
	private LogRepository logRepository;


	//四个接口

	//登陆
	@PostMapping(path="account/login")
	public @ResponseBody String login(@RequestParam String account, @RequestParam String password){
		
		User user = userRepository.findUserByAccountAndPassword(account, password);
		if(user == null){
			return "账户不存在或密码错误";
		}

		
		//date to string
		Date date = Calendar.getInstance().getTime();
		DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd hh:mm:ss");
		String strDate = dateFormat.format(date);

		Log alog = new Log();
		alog.setContent("content");
		alog.setLoginUserID(user.getId());
		alog.setDateIn(strDate);
		logRepository.save(alog);
		return "登陆成功";
	}

	//注册
	@PostMapping(path="account/register") // Map ONLY POST Requests
	public @ResponseBody String addNewUser (@RequestParam String account
			, @RequestParam String password) {
		// @ResponseBody means the returned String is the response, not a view account
		// @RequestParam means it is a parameter from the GET or POST request
		
		User user = userRepository.findUserByAccount(account);
		if(user != null){
			return "账号已存在";
		}

		//date to string
		Date date = Calendar.getInstance().getTime();
		DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd hh:mm:ss");
		String strDate = dateFormat.format(date);

		User n = new User();
		n.setAccount(account);
		n.setPassword(password);
		n.setDateIn(strDate);
		userRepository.save(n);
		return "注册成功";
	}



	@GetMapping(path="account/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}

	@GetMapping(path="account/delall")
	public @ResponseBody String delAll(){
		userRepository.deleteAll();
		return "deleted all";
	}



	//添加学生
	@PostMapping(path="student/add") // Map ONLY POST Requests
	public @ResponseBody String addNewStudent (@RequestParam String studentID
			, @RequestParam String name) {
		// @ResponseBody means the returned String is the response, not a view account
		// @RequestParam means it is a parameter from the GET or POST request
		
		//date to string
		Date date = Calendar.getInstance().getTime();
		DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd hh:mm:ss");
		String strDate = dateFormat.format(date);

		Student n = new Student();
		n.setStudentID(studentID);
		n.setName(name);
		n.setDateIn(strDate);
		studentRepository.save(n);
		return "Saved";
	}


	@GetMapping(path="student/all")
	public @ResponseBody Iterable<Student> getAllStudent() {
		// This returns a JSON or XML with the users
		return studentRepository.findAll();
	}

	@GetMapping(path="logs/all")
	public @ResponseBody Iterable<Log> getAllLog(){
		return logRepository.findAll();
	}



}
